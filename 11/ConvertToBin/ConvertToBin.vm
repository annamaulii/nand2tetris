call Memory.alloc 0
function Main.main 0
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 4
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 4
push constant 0
return
call Memory.alloc 0
function Main.convert 0
push constant -1
pop local 2
push local 2
label WHILE_TRUE
if-goto WHILE_FALSE
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto IF_TRUE
goto IF_FALSE
label IF_TRUE
push argument 0
push local 0
and
push constant 0
eq
not
if-goto IF_TRUE
goto IF_FALSE
label IF_TRUE
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 4
label IF_FALSE
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 4
label IF_FALSE
push constant 0
pop local 2
goto WHILE_TRUE
label WHILE_FALSE
push constant 0
return
call Memory.alloc 0
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto IF_TRUE
goto IF_FALSE
label IF_TRUE
push constant 1
return
label IF_FALSE
push argument 0
push constant 2
call Math.multiply 2
return
call Memory.alloc 2
function Main.fillMemory 2
push argument 1
push constant 0
gt
label WHILE_TRUE
if-goto WHILE_FALSE
push argument 0
push argument 2
call Memory.poke 2
pop temp 4
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto WHILE_TRUE
label WHILE_FALSE
push constant 0
return
